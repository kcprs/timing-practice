<?xml version="1.0" encoding="UTF-8" standalone="no" ?><w:document xmlns:w="http://schemas.openxmlformats.org/wordprocessingml/2006/main"><w:body><w:p><w:pPr><w:pStyle w:val="code"/></w:pPr><w:r><w:t><![CDATA[classdef timingPractice < matlab.apps.AppBase

    % Properties that correspond to app components
    properties (Access = public)
        TimingPractice              matlab.ui.Figure
        TabGroup                    matlab.ui.container.TabGroup
        MainTab                     matlab.ui.container.Tab
        EarlyLampLabel              matlab.ui.control.Label
        EarlyLamp                   matlab.ui.control.Lamp
        OKLampLabel                 matlab.ui.control.Label
        OKLamp                      matlab.ui.control.Lamp
        LateLampLabel               matlab.ui.control.Label
        LateLamp                    matlab.ui.control.Lamp
        StartButton                 matlab.ui.control.Button
        StopButton                  matlab.ui.control.Button
        PracticeOptionsPanel        matlab.ui.container.Panel
        TempoBPMEditFieldLabel      matlab.ui.control.Label
        TempoField                  matlab.ui.control.NumericEditField
        DurationminEditFieldLabel   matlab.ui.control.Label
        DurationField               matlab.ui.control.NumericEditField
        TimingGauge                 matlab.ui.control.LinearGauge
        ResultsTab                  matlab.ui.container.Tab
        TimingPlot                  matlab.ui.control.UIAxes
        PlayheadSlider              matlab.ui.control.Slider
        NextOnsetButton             matlab.ui.control.Button
        PreviousOnsetButton         matlab.ui.control.Button
        PreviousTickButton          matlab.ui.control.Button
        NextTickButton              matlab.ui.control.Button
        ZoomSlider                  matlab.ui.control.Slider
        TimingPlotPreview           matlab.ui.control.UIAxes
        PreviewPlayheadSlider       matlab.ui.control.Slider
        SelectedOnsetResultsPanel   matlab.ui.container.Panel
        TimingLabel                 matlab.ui.control.Label
        ErrorLabel                  matlab.ui.control.Label
        TimeLabel                   matlab.ui.control.Label
        GlobalResultsPanel          matlab.ui.container.Panel
        AverageErrorLabel           matlab.ui.control.Label
        AverageLateErrorLabel       matlab.ui.control.Label
        AverageEarlyErrorLabel      matlab.ui.control.Label
        NumberOfEarlyErrorsLabel    matlab.ui.control.Label
        NumberOfLateErrorsLabel     matlab.ui.control.Label
        NumberOfCorrectOnsetsLabel  matlab.ui.control.Label
        SettingsTab                 matlab.ui.container.Tab
        SystemSettingsPanel         matlab.ui.container.Panel
        SampleRateDropDownLabel     matlab.ui.control.Label
        SampleRateDropDown          matlab.ui.control.DropDown
        BufferSizeDropDownLabel     matlab.ui.control.Label
        BufferSizeDropDown          matlab.ui.control.DropDown
        InputDeviceDropDownLabel    matlab.ui.control.Label
        InputDeviceDropDown         matlab.ui.control.DropDown
        OutputDeviceDropDownLabel   matlab.ui.control.Label
        OutputDeviceDropDown        matlab.ui.control.DropDown
        MeasureAudioLagButton       matlab.ui.control.Button
    end

    
    properties (Access = public)
        session;
        player;
        deviceReader;
    end
    

    methods (Access = private)

        % Code that executes after component creation
        function startupFcn(app)
            initialise(app);
        end

        % Button pushed function: StartButton
        function StartButtonPushed(app, event)
            app.session.runPractice(app);
            app.TabGroup.SelectedTab = app.ResultsTab;
        end

        % Button pushed function: StopButton
        function StopButtonPushed(app, event)
            app.session.stopPractice(app);
        end

        % Value changed function: PlayheadSlider
        function PlayheadSliderValueChanged(app, event)
            app.session.resultsPlot.playheadSliderMoved(app.PlayheadSlider.Value);
        end

        % Button pushed function: NextOnsetButton
        function NextOnsetButtonPushed(app, event)
            app.session.resultsPlot.movePlayheadTo('next', 'onset');
        end

        % Button pushed function: PreviousOnsetButton
        function PreviousOnsetButtonPushed(app, event)
            app.session.resultsPlot.movePlayheadTo('previous', 'onset');
        end

        % Button pushed function: PreviousTickButton
        function PreviousTickButtonPushed(app, event)
            app.session.resultsPlot.movePlayheadTo('previous', 'tick');
        end

        % Button pushed function: NextTickButton
        function NextTickButtonPushed(app, event)
            app.session.resultsPlot.movePlayheadTo('next', 'tick');
        end

        % Button pushed function: MeasureAudioLagButton
        function MeasureAudioLagButtonPushed(app, event)
            app.session.measureAudioLag(app);
        end

        % Value changed function: ZoomSlider
        function ZoomSliderValueChanged(app, event)
            app.session.resultsPlot.zoom(app.ZoomSlider.Value);
        end

        % Value changed function: InputDeviceDropDown, 
        % OutputDeviceDropDown
        function IODeviceChanged(app, event)
            saveIoSettings(app);
        end

        % Value changed function: PreviewPlayheadSlider
        function PreviewPlayheadSliderValueChanged(app, event)
            app.session.resultsPlot.previewPlayheadSliderMoved(app.PreviewPlayheadSlider.Value);            
        end
    end

    % App initialization and construction
    methods (Access = private)

        % Create UIFigure and components
        function createComponents(app)

            % Create TimingPractice
            app.TimingPractice = uifigure;
            app.TimingPractice.Position = [100 100 1163 750];
            app.TimingPractice.Name = 'Timing Practice';

            % Create TabGroup
            app.TabGroup = uitabgroup(app.TimingPractice);
            app.TabGroup.Position = [1 1 1163 750];

            % Create MainTab
            app.MainTab = uitab(app.TabGroup);
            app.MainTab.Title = 'Main';

            % Create EarlyLampLabel
            app.EarlyLampLabel = uilabel(app.MainTab);
            app.EarlyLampLabel.HorizontalAlignment = 'right';
            app.EarlyLampLabel.Position = [94 573 33 22];
            app.EarlyLampLabel.Text = 'Early';

            % Create EarlyLamp
            app.EarlyLamp = uilamp(app.MainTab);
            app.EarlyLamp.Position = [142 492 183 183];
            app.EarlyLamp.Color = [0.902 0.902 0.902];

            % Create OKLampLabel
            app.OKLampLabel = uilabel(app.MainTab);
            app.OKLampLabel.HorizontalAlignment = 'right';
            app.OKLampLabel.Position = [457 572 25 22];
            app.OKLampLabel.Text = 'OK';

            % Create OKLamp
            app.OKLamp = uilamp(app.MainTab);
            app.OKLamp.Position = [497 492 181 181];
            app.OKLamp.Color = [0.902 0.902 0.902];

            % Create LateLampLabel
            app.LateLampLabel = uilabel(app.MainTab);
            app.LateLampLabel.HorizontalAlignment = 'right';
            app.LateLampLabel.Position = [810 572 29 22];
            app.LateLampLabel.Text = 'Late';

            % Create LateLamp
            app.LateLamp = uilamp(app.MainTab);
            app.LateLamp.Position = [854 492 181 181];
            app.LateLamp.Color = [0.902 0.902 0.902];

            % Create StartButton
            app.StartButton = uibutton(app.MainTab, 'push');
            app.StartButton.ButtonPushedFcn = createCallbackFcn(app, @StartButtonPushed, true);
            app.StartButton.Position = [350 183 100 22];
            app.StartButton.Text = 'Start';

            % Create StopButton
            app.StopButton = uibutton(app.MainTab, 'push');
            app.StopButton.ButtonPushedFcn = createCallbackFcn(app, @StopButtonPushed, true);
            app.StopButton.Position = [350 148 100 22];
            app.StopButton.Text = 'Stop';

            % Create PracticeOptionsPanel
            app.PracticeOptionsPanel = uipanel(app.MainTab);
            app.PracticeOptionsPanel.Title = 'Practice Options';
            app.PracticeOptionsPanel.Position = [62 118 243 128];

            % Create TempoBPMEditFieldLabel
            app.TempoBPMEditFieldLabel = uilabel(app.PracticeOptionsPanel);
            app.TempoBPMEditFieldLabel.HorizontalAlignment = 'right';
            app.TempoBPMEditFieldLabel.Position = [24 65 79 22];
            app.TempoBPMEditFieldLabel.Text = 'Tempo (BPM)';

            % Create TempoField
            app.TempoField = uieditfield(app.PracticeOptionsPanel, 'numeric');
            app.TempoField.Limits = [40 320];
            app.TempoField.RoundFractionalValues = 'on';
            app.TempoField.Position = [121 65 100 22];
            app.TempoField.Value = 120;

            % Create DurationminEditFieldLabel
            app.DurationminEditFieldLabel = uilabel(app.PracticeOptionsPanel);
            app.DurationminEditFieldLabel.HorizontalAlignment = 'right';
            app.DurationminEditFieldLabel.Position = [24 23 82 22];
            app.DurationminEditFieldLabel.Text = 'Duration (min)';

            % Create DurationField
            app.DurationField = uieditfield(app.PracticeOptionsPanel, 'numeric');
            app.DurationField.LowerLimitInclusive = 'off';
            app.DurationField.Limits = [0 60];
            app.DurationField.Position = [121 23 100 22];
            app.DurationField.Value = 0.1;

            % Create TimingGauge
            app.TimingGauge = uigauge(app.MainTab, 'linear');
            app.TimingGauge.Limits = [-1 1];
            app.TimingGauge.ScaleColors = [1 0 0;0 1 0;1 0 0;1 0.8667 0;1 0.8706 0];
            app.TimingGauge.ScaleColorLimits = [-1 -0.5;-0.05 0.05;0.5 1;-0.5 -0.05;0.05 0.5];
            app.TimingGauge.Position = [71 404 1021.984375 40];

            % Create ResultsTab
            app.ResultsTab = uitab(app.TabGroup);
            app.ResultsTab.Title = 'Results';

            % Create TimingPlot
            app.TimingPlot = uiaxes(app.ResultsTab);
            app.TimingPlot.PlotBoxAspectRatio = [1 0.310144927536232 0.310144927536232];
            app.TimingPlot.GridColor = [0 0 0];
            app.TimingPlot.GridAlpha = 1;
            app.TimingPlot.XTick = [];
            app.TimingPlot.XTickLabel = {};
            app.TimingPlot.YTick = [];
            app.TimingPlot.YTickLabel = {};
            app.TimingPlot.Position = [77 187 1046 376];

            % Create PlayheadSlider
            app.PlayheadSlider = uislider(app.ResultsTab);
            app.PlayheadSlider.Limits = [0 1];
            app.PlayheadSlider.MajorTicks = [];
            app.PlayheadSlider.ValueChangedFcn = createCallbackFcn(app, @PlayheadSliderValueChanged, true);
            app.PlayheadSlider.MinorTicks = [];
            app.PlayheadSlider.Position = [81 185 1034 3];

            % Create NextOnsetButton
            app.NextOnsetButton = uibutton(app.ResultsTab, 'push');
            app.NextOnsetButton.ButtonPushedFcn = createCallbackFcn(app, @NextOnsetButtonPushed, true);
            app.NextOnsetButton.Position = [168 108 100 22];
            app.NextOnsetButton.Text = 'Next Onset';

            % Create PreviousOnsetButton
            app.PreviousOnsetButton = uibutton(app.ResultsTab, 'push');
            app.PreviousOnsetButton.ButtonPushedFcn = createCallbackFcn(app, @PreviousOnsetButtonPushed, true);
            app.PreviousOnsetButton.Position = [44 108 100 22];
            app.PreviousOnsetButton.Text = 'Previous Onset';

            % Create PreviousTickButton
            app.PreviousTickButton = uibutton(app.ResultsTab, 'push');
            app.PreviousTickButton.ButtonPushedFcn = createCallbackFcn(app, @PreviousTickButtonPushed, true);
            app.PreviousTickButton.Position = [44 77 100 22];
            app.PreviousTickButton.Text = 'Previous Tick';

            % Create NextTickButton
            app.NextTickButton = uibutton(app.ResultsTab, 'push');
            app.NextTickButton.ButtonPushedFcn = createCallbackFcn(app, @NextTickButtonPushed, true);
            app.NextTickButton.Position = [168 77 100 22];
            app.NextTickButton.Text = 'Next Tick';

            % Create ZoomSlider
            app.ZoomSlider = uislider(app.ResultsTab);
            app.ZoomSlider.Limits = [0 1];
            app.ZoomSlider.MajorTicks = [];
            app.ZoomSlider.Orientation = 'vertical';
            app.ZoomSlider.ValueChangedFcn = createCallbackFcn(app, @ZoomSliderValueChanged, true);
            app.ZoomSlider.MinorTicks = [];
            app.ZoomSlider.Position = [1133 218 3 316];

            % Create TimingPlotPreview
            app.TimingPlotPreview = uiaxes(app.ResultsTab);
            app.TimingPlotPreview.GridColor = [0 0 0];
            app.TimingPlotPreview.GridAlpha = 1;
            app.TimingPlotPreview.XTick = [];
            app.TimingPlotPreview.XTickLabel = {};
            app.TimingPlotPreview.YTick = [];
            app.TimingPlotPreview.YTickLabel = {};
            app.TimingPlotPreview.Position = [77 590 1042 81];

            % Create PreviewPlayheadSlider
            app.PreviewPlayheadSlider = uislider(app.ResultsTab);
            app.PreviewPlayheadSlider.Limits = [0 1];
            app.PreviewPlayheadSlider.MajorTicks = [];
            app.PreviewPlayheadSlider.ValueChangedFcn = createCallbackFcn(app, @PreviewPlayheadSliderValueChanged, true);
            app.PreviewPlayheadSlider.MinorTicks = [];
            app.PreviewPlayheadSlider.Position = [81 682 1031 3];

            % Create SelectedOnsetResultsPanel
            app.SelectedOnsetResultsPanel = uipanel(app.ResultsTab);
            app.SelectedOnsetResultsPanel.Title = 'Selected Onset Results';
            app.SelectedOnsetResultsPanel.Position = [317 24 281 139];

            % Create TimingLabel
            app.TimingLabel = uilabel(app.SelectedOnsetResultsPanel);
            app.TimingLabel.Position = [15 51 249 22];
            app.TimingLabel.Text = 'Timing:';

            % Create ErrorLabel
            app.ErrorLabel = uilabel(app.SelectedOnsetResultsPanel);
            app.ErrorLabel.Position = [15 18 249 22];
            app.ErrorLabel.Text = 'Error:';

            % Create TimeLabel
            app.TimeLabel = uilabel(app.SelectedOnsetResultsPanel);
            app.TimeLabel.Position = [15 84 249 22];
            app.TimeLabel.Text = 'Time:';

            % Create GlobalResultsPanel
            app.GlobalResultsPanel = uipanel(app.ResultsTab);
            app.GlobalResultsPanel.Title = 'Global Results';
            app.GlobalResultsPanel.Position = [659 24 464 139];

            % Create AverageErrorLabel
            app.AverageErrorLabel = uilabel(app.GlobalResultsPanel);
            app.AverageErrorLabel.Position = [16 84 198 22];
            app.AverageErrorLabel.Text = 'Average Error:';

            % Create AverageLateErrorLabel
            app.AverageLateErrorLabel = uilabel(app.GlobalResultsPanel);
            app.AverageLateErrorLabel.Position = [16 18 198 22];
            app.AverageLateErrorLabel.Text = 'Average Late Error:';

            % Create AverageEarlyErrorLabel
            app.AverageEarlyErrorLabel = uilabel(app.GlobalResultsPanel);
            app.AverageEarlyErrorLabel.Position = [16 51 198 22];
            app.AverageEarlyErrorLabel.Text = 'Average Early Error:';

            % Create NumberOfEarlyErrorsLabel
            app.NumberOfEarlyErrorsLabel = uilabel(app.GlobalResultsPanel);
            app.NumberOfEarlyErrorsLabel.Position = [241 51 202 22];
            app.NumberOfEarlyErrorsLabel.Text = 'Number Of Early Errors:';

            % Create NumberOfLateErrorsLabel
            app.NumberOfLateErrorsLabel = uilabel(app.GlobalResultsPanel);
            app.NumberOfLateErrorsLabel.Position = [241 18 202 22];
            app.NumberOfLateErrorsLabel.Text = 'Number Of Late Errors:';

            % Create NumberOfCorrectOnsetsLabel
            app.NumberOfCorrectOnsetsLabel = uilabel(app.GlobalResultsPanel);
            app.NumberOfCorrectOnsetsLabel.Position = [241 84 202 22];
            app.NumberOfCorrectOnsetsLabel.Text = 'Number Of Correct Onsets:';

            % Create SettingsTab
            app.SettingsTab = uitab(app.TabGroup);
            app.SettingsTab.Title = 'Settings';

            % Create SystemSettingsPanel
            app.SystemSettingsPanel = uipanel(app.SettingsTab);
            app.SystemSettingsPanel.Title = 'System Settings';
            app.SystemSettingsPanel.Position = [389 461 716 220];

            % Create SampleRateDropDownLabel
            app.SampleRateDropDownLabel = uilabel(app.SystemSettingsPanel);
            app.SampleRateDropDownLabel.HorizontalAlignment = 'right';
            app.SampleRateDropDownLabel.Position = [24 69 75 22];
            app.SampleRateDropDownLabel.Text = 'Sample Rate';

            % Create SampleRateDropDown
            app.SampleRateDropDown = uidropdown(app.SystemSettingsPanel);
            app.SampleRateDropDown.Items = {'44100', '48000'};
            app.SampleRateDropDown.Position = [120 69 101 22];
            app.SampleRateDropDown.Value = '44100';

            % Create BufferSizeDropDownLabel
            app.BufferSizeDropDownLabel = uilabel(app.SystemSettingsPanel);
            app.BufferSizeDropDownLabel.HorizontalAlignment = 'right';
            app.BufferSizeDropDownLabel.Position = [24 27 64 22];
            app.BufferSizeDropDownLabel.Text = 'Buffer Size';

            % Create BufferSizeDropDown
            app.BufferSizeDropDown = uidropdown(app.SystemSettingsPanel);
            app.BufferSizeDropDown.Items = {'128', '256', '512', '1024'};
            app.BufferSizeDropDown.Position = [120 27 101 22];
            app.BufferSizeDropDown.Value = '512';

            % Create InputDeviceDropDownLabel
            app.InputDeviceDropDownLabel = uilabel(app.SystemSettingsPanel);
            app.InputDeviceDropDownLabel.HorizontalAlignment = 'right';
            app.InputDeviceDropDownLabel.Position = [24 153 72 22];
            app.InputDeviceDropDownLabel.Text = 'Input Device';

            % Create InputDeviceDropDown
            app.InputDeviceDropDown = uidropdown(app.SystemSettingsPanel);
            app.InputDeviceDropDown.ValueChangedFcn = createCallbackFcn(app, @IODeviceChanged, true);
            app.InputDeviceDropDown.Position = [121 153 565 22];

            % Create OutputDeviceDropDownLabel
            app.OutputDeviceDropDownLabel = uilabel(app.SystemSettingsPanel);
            app.OutputDeviceDropDownLabel.HorizontalAlignment = 'right';
            app.OutputDeviceDropDownLabel.Position = [24 111 82 22];
            app.OutputDeviceDropDownLabel.Text = 'Output Device';

            % Create OutputDeviceDropDown
            app.OutputDeviceDropDown = uidropdown(app.SystemSettingsPanel);
            app.OutputDeviceDropDown.ValueChangedFcn = createCallbackFcn(app, @IODeviceChanged, true);
            app.OutputDeviceDropDown.Position = [121 111 565 22];

            % Create MeasureAudioLagButton
            app.MeasureAudioLagButton = uibutton(app.SettingsTab, 'push');
            app.MeasureAudioLagButton.ButtonPushedFcn = createCallbackFcn(app, @MeasureAudioLagButtonPushed, true);
            app.MeasureAudioLagButton.Position = [113 551 120 22];
            app.MeasureAudioLagButton.Text = 'Measure Audio Lag';
        end
    end

    methods (Access = public)

        % Construct app
        function app = timingPractice

            % Create and configure components
            createComponents(app)

            % Register the app with App Designer
            registerApp(app, app.TimingPractice)

            % Execute the startup function
            runStartupFcn(app, @startupFcn)

            if nargout == 0
                clear app
            end
        end

        % Code that executes before app deletion
        function delete(app)

            % Delete UIFigure when app is deleted
            delete(app.TimingPractice)
        end
    end
end]]></w:t></w:r></w:p></w:body></w:document>